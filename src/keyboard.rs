pub(crate) fn baseview_to_tuix_keycode(code: keyboard_types::Code) -> Option<tuix::VirtualKeyCode> {
    use keyboard_types::Code as KCode;
    use tuix::VirtualKeyCode as TCode;

    match code {
        KCode::Digit1 => Some(TCode::Key1),
        KCode::Digit2 => Some(TCode::Key2),
        KCode::Digit3 => Some(TCode::Key3),
        KCode::Digit4 => Some(TCode::Key4),
        KCode::Digit5 => Some(TCode::Key5),
        KCode::Digit6 => Some(TCode::Key6),
        KCode::Digit7 => Some(TCode::Key7),
        KCode::Digit8 => Some(TCode::Key8),
        KCode::Digit9 => Some(TCode::Key9),
        KCode::Digit0 => Some(TCode::Key0),

        KCode::KeyA => Some(TCode::A),
        KCode::KeyB => Some(TCode::B),
        KCode::KeyC => Some(TCode::C),
        KCode::KeyD => Some(TCode::D),
        KCode::KeyE => Some(TCode::E),
        KCode::KeyF => Some(TCode::F),
        KCode::KeyG => Some(TCode::G),
        KCode::KeyH => Some(TCode::H),
        KCode::KeyI => Some(TCode::I),
        KCode::KeyJ => Some(TCode::J),
        KCode::KeyK => Some(TCode::K),
        KCode::KeyL => Some(TCode::L),
        KCode::KeyM => Some(TCode::M),
        KCode::KeyN => Some(TCode::N),
        KCode::KeyO => Some(TCode::O),
        KCode::KeyP => Some(TCode::P),
        KCode::KeyQ => Some(TCode::Q),
        KCode::KeyR => Some(TCode::R),
        KCode::KeyS => Some(TCode::S),
        KCode::KeyT => Some(TCode::T),
        KCode::KeyU => Some(TCode::U),
        KCode::KeyV => Some(TCode::V),
        KCode::KeyW => Some(TCode::W),
        KCode::KeyX => Some(TCode::X),
        KCode::KeyY => Some(TCode::Y),
        KCode::KeyZ => Some(TCode::Z),

        KCode::Escape => Some(TCode::Escape),

        KCode::F1 => Some(TCode::F1),
        KCode::F2 => Some(TCode::F2),
        KCode::F3 => Some(TCode::F3),
        KCode::F4 => Some(TCode::F4),
        KCode::F5 => Some(TCode::F5),
        KCode::F6 => Some(TCode::F6),
        KCode::F7 => Some(TCode::F7),
        KCode::F8 => Some(TCode::F8),
        KCode::F9 => Some(TCode::F9),
        KCode::F10 => Some(TCode::F10),
        KCode::F11 => Some(TCode::F11),
        KCode::F12 => Some(TCode::F12),

        KCode::PrintScreen => Some(TCode::Snapshot),
        KCode::ScrollLock => Some(TCode::Scroll),
        KCode::Pause => Some(TCode::Pause),

        KCode::Insert => Some(TCode::Insert),
        KCode::Home => Some(TCode::Home),
        KCode::Delete => Some(TCode::Delete),
        KCode::End => Some(TCode::End),
        KCode::PageDown => Some(TCode::PageDown),
        KCode::PageUp => Some(TCode::PageUp),

        KCode::ArrowLeft => Some(TCode::Left),
        KCode::ArrowUp => Some(TCode::Up),
        KCode::ArrowRight => Some(TCode::Right),
        KCode::ArrowDown => Some(TCode::Down),

        KCode::Backspace => Some(TCode::Back),
        KCode::Enter => Some(TCode::Return),
        KCode::Space => Some(TCode::Space),

        KCode::NumLock => Some(TCode::Numlock),
        KCode::Numpad0 => Some(TCode::Numpad0),
        KCode::Numpad1 => Some(TCode::Numpad1),
        KCode::Numpad2 => Some(TCode::Numpad2),
        KCode::Numpad3 => Some(TCode::Numpad3),
        KCode::Numpad4 => Some(TCode::Numpad4),
        KCode::Numpad5 => Some(TCode::Numpad5),
        KCode::Numpad6 => Some(TCode::Numpad6),
        KCode::Numpad7 => Some(TCode::Numpad7),
        KCode::Numpad8 => Some(TCode::Numpad8),
        KCode::Numpad9 => Some(TCode::Numpad9),
        KCode::NumpadAdd => Some(TCode::NumpadAdd),
        KCode::NumpadDivide => Some(TCode::NumpadDivide),
        KCode::NumpadDecimal => Some(TCode::NumpadDecimal),
        KCode::NumpadComma => Some(TCode::NumpadComma),
        KCode::NumpadEnter => Some(TCode::NumpadEnter),
        KCode::NumpadEqual => Some(TCode::NumpadEquals),
        KCode::NumpadMultiply => Some(TCode::NumpadMultiply),
        KCode::NumpadSubtract => Some(TCode::NumpadSubtract),

        //KCode::AbntC1 => Some(TCode::AbntC1),    // TODO ?
        //KCode::AbntC1 => Some(TCode::AbntC1),    // TODO ?
        KCode::Convert => Some(TCode::Convert),
        KCode::KanaMode => Some(TCode::Kana),
        //KCode::Kanji => TCode::Kanji),    // TODO ?
        KCode::NonConvert => Some(TCode::NoConvert),
        KCode::IntlYen => Some(TCode::Yen),

        KCode::AltLeft => Some(TCode::LAlt),
        KCode::AltRight => Some(TCode::RAlt),
        KCode::BracketLeft => Some(TCode::LBracket),
        KCode::BracketRight => Some(TCode::RBracket),
        KCode::ControlLeft => Some(TCode::LControl),
        KCode::ControlRight => Some(TCode::RControl),
        KCode::ShiftLeft => Some(TCode::LShift),
        KCode::ShiftRight => Some(TCode::RShift),
        KCode::MetaLeft => Some(TCode::LWin),
        KCode::MetaRight => Some(TCode::RWin),

        KCode::Minus => Some(TCode::Minus),
        KCode::Period => Some(TCode::Period),
        //KCode::Plus => Some(TCode::Plus),    // TODO ?
        KCode::Equal => Some(TCode::Equals),
        KCode::Quote => Some(TCode::Apostrophe),
        KCode::Comma => Some(TCode::Comma),
        //KCode::Grave => Some(TCode::Grave),    // TODO ?
        //KCode::Colon => Some(TCode::Colon),    // TODO ?
        KCode::Semicolon => Some(TCode::Semicolon),
        KCode::Backslash => Some(TCode::Backslash),
        KCode::Slash => Some(TCode::Slash),
        KCode::Tab => Some(TCode::Tab),
        //KCode::Underline => Some(TCode::Underline),    // TODO ?
        KCode::Copy => Some(TCode::Copy),
        KCode::Paste => Some(TCode::Paste),
        KCode::Cut => Some(TCode::Cut),

        KCode::MediaSelect => Some(TCode::MediaSelect),
        KCode::MediaStop => Some(TCode::MediaStop),
        KCode::MediaPlayPause => Some(TCode::PlayPause),
        KCode::AudioVolumeMute => Some(TCode::Mute),
        KCode::AudioVolumeDown => Some(TCode::VolumeDown),
        KCode::AudioVolumeUp => Some(TCode::VolumeUp),
        KCode::MediaTrackNext => Some(TCode::NextTrack),
        KCode::MediaTrackPrevious => Some(TCode::PrevTrack),

        _ => None,
    }
}
